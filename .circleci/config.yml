version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers-legacy
        environment:
          - RAILS_ENV: 'test'
      - image: circleci/mysql:5.6
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'

    working_directory: ~/techapp

    steps:
      - checkout
      # キャッシュすることで、テスト等の時間を短縮している
      - restore_cache:
          keys:
            - techapp-bundle-v1-{{ checksum "Gemfile.lock" }}
            - techapp-bundle-v1-
      - run:
          name: Bundlerをinstall
          command: |
            gem update --system
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: techapp-bundle-v1-{{ checksum "Gemfile.lock" }}

# database.ymlとdatabase.yml.ciを入れ替える。
      - run: mv config/database.yml.ci config/database.yml 

      # Database setup
      - run: bundle exec rails db:create
      #schema.rbをもとにSQLクエリを発行。ローカルでいうrails db:migrateのようなもの。
      - run: bundle exec rails db:schema:load

# rubocopを走らせる記述。
      - run:
          name: Rubocop
          command: bundle exec rubocop

# rspecを走らせる記述。(yarnを事前に入れておかないと、統合テストが上手くいかない)
      - run:
          name: yarn Install
          command: yarn install
      - run:
          name: Rspec
          command: bundle exec rspec
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results